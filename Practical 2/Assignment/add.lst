     1                                 %line 1+1 add.asm
     2                                 [section .data]
     3 00000000 506C6561736520696E-     msg1 db "Please input the first number: "
     4 00000000 707574207468652066-
     5 00000000 69727374206E756D62-
     6 00000000 65723A20           
     7 0000001F 506C6561736520696E-     msg2 db "Please input the second number: "
     8 0000001F 707574207468652073-
     9 0000001F 65636F6E64206E756D-
    10 0000001F 6265723A20         
    11 0000003F 0A                      blank db '', 0xA
    12 00000040 0A                      dividand db 10
    13 00000041 0000000000000000        integ dq 0
    14 00000049 0000000000000000        res dq 0
    15 00000051 0000000000000000        remain dq 0
    16 00000059 0000000000000000        num1 dq 0
    17 00000061 0000000000000000        num2 dq 0
    18                                 
    19                                 [section .text]
    20                                 [global _start]
    21                                 
    22                                 _start
    23 00000000 48C7C001000000          mov rax, 1
    24 00000007 48C7C701000000          mov rdi, 1
    25 0000000E 48C7C6[00000000]        mov rsi, msg1
    26 00000015 48C7C21F000000          mov rdx, 31
    27 0000001C 0F05                    syscall
    28                                 
    29 0000001E 48C7C000000000          mov rax, 0
    30 00000025 48C7C700000000          mov rdi, 0
    31 0000002C 48C7C6[00000000]        mov rsi, num1
    32 00000033 48C7C202000000          mov rdx, 2
    33 0000003A 0F05                    syscall
    34                                 
    35 0000003C 48C7C001000000          mov rax, 1
    36 00000043 48C7C701000000          mov rdi, 1
    37 0000004A 48C7C6[00000000]        mov rsi, msg2
    38 00000051 48C7C220000000          mov rdx, 32
    39 00000058 0F05                    syscall
    40                                 
    41 0000005A 48C7C000000000          mov rax, 0
    42 00000061 48C7C700000000          mov rdi, 0
    43 00000068 48C7C6[00000000]        mov rsi, num2
    44 0000006F 48C7C202000000          mov rdx, 2
    45 00000076 0F05                    syscall
    46                                 
    47 00000078 488B1C25[00000000]      mov rbx, [num1]
    48 00000080 4883EB30                sub rbx, 48
    49 00000084 488B0425[00000000]      mov rax, [num2]
    50 0000008C 4883E830                sub rax, 48
    51 00000090 4801C3                  add rbx, rax
    52 00000093 48891C25[00000000]      mov [res], rbx
    53                                 
    54 0000009B 488B0425[00000000]      mov rax, [res]
    55 000000A3 48C7C200000000          mov rdx, 0
    56 000000AA 48F73C25[00000000]      idiv qword [dividand]
    57 000000B2 48890425[00000000]      mov [integ], rax
    58 000000BA 48891425[00000000]      mov [remain], rdx
    59 000000C2 4831DB                  xor rbx, rbx
    60 000000C5 0F05                    syscall
    61                                 
    62                                 
    63 000000C7 48C7C001000000          mov rax, 1
    64 000000CE 48C7C701000000          mov rdi, 1
    65 000000D5 488B1C25[00000000]      mov rbx, [integ]
    66 000000DD 4883C330                add rbx, 48
    67 000000E1 48891C25[00000000]      mov [integ], rbx
    68 000000E9 48C7C6[00000000]        mov rsi, integ
    69 000000F0 48C7C202000000          mov rdx, 2
    70 000000F7 0F05                    syscall
    71                                 
    72                                 
    73 000000F9 48C7C001000000          mov rax, 1
    74 00000100 48C7C701000000          mov rdi, 1
    75 00000107 488B1C25[00000000]      mov rbx, [remain]
    76 0000010F 4883C330                add rbx, 48
    77 00000113 48891C25[00000000]      mov [remain], rbx
    78 0000011B 48C7C6[00000000]        mov rsi, remain
    79 00000122 48C7C201000000          mov rdx, 1
    80 00000129 0F05                    syscall
    81                                 
    82                                 
    83 0000012B 48C7C001000000          mov rax, 1
    84 00000132 48C7C701000000          mov rdi, 1
    85 00000139 48C7C6[00000000]        mov rsi, blank
    86 00000140 48C7C201000000          mov rdx, 1
    87                                 
    88 00000147 0F05                    syscall
    89 00000149 B801000000              mov eax, 1
    90 0000014E BB00000000              mov ebx, 0
    91 00000153 CD80                    int 0x80
